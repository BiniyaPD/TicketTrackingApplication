// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketTracking.EFLayer.Models;

namespace TicketTracking.EFLayer.Migrations
{
    [DbContext(typeof(db_ticketTrackingContext))]
    partial class db_ticketTrackingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TicketTracking.EFLayer.Models.Employee", b =>
                {
                    b.Property<string>("Employeeid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Epassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Employeeid");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TicketTracking.EFLayer.Models.Ticket", b =>
                {
                    b.Property<string>("TicketId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoggedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoggedByEmployeeEmployeeid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RaisedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResolvedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResolvedByEmployeeEmployeeid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ResolvedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ticketdescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketId");

                    b.HasIndex("LoggedByEmployeeEmployeeid");

                    b.HasIndex("ResolvedByEmployeeEmployeeid");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketTracking.EFLayer.Models.Ticket", b =>
                {
                    b.HasOne("TicketTracking.EFLayer.Models.Employee", "LoggedByEmployee")
                        .WithMany()
                        .HasForeignKey("LoggedByEmployeeEmployeeid");

                    b.HasOne("TicketTracking.EFLayer.Models.Employee", "ResolvedByEmployee")
                        .WithMany()
                        .HasForeignKey("ResolvedByEmployeeEmployeeid");

                    b.Navigation("LoggedByEmployee");

                    b.Navigation("ResolvedByEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
